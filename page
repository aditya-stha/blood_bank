import { useEffect, useState } from "react";
import { Input } from "@/components/ui/input";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

export default function BloodLocator() {
  const [data, setData] = useState([]);
  const [searchType, setSearchType] = useState("");
  const [cityFilter, setCityFilter] = useState("");

  // Replace with your Sheet ID
  const SHEET_ID = "YOUR_SHEET_ID";
  const URL = `https://docs.google.com/spreadsheets/d/${SHEET_ID}/gviz/tq?tqx=out:json`;

  useEffect(() => {
    fetch(URL)
      .then((res) => res.text())
      .then((text) => {
        const json = JSON.parse(text.substr(47).slice(0, -2));
        const rows = json.table.rows.map((r) =>
          r.c.map((c) => (c ? c.v : ""))
        );
        setData(rows);
      });
  }, []);

  const headers = [
    "Hospital Name", "City", "Contact Number", "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-", "Last Updated", "Updated By", "Verification Status"
  ];

  const filtered = data.filter((row) => {
    const matchesType = searchType ? row.includes(searchType) : true;
    const matchesCity = cityFilter ? row[1].toLowerCase().includes(cityFilter.toLowerCase()) : true;
    return matchesType && matchesCity;
  });

  return (
    <div className="p-6 max-w-5xl mx-auto">
      <h1 className="text-2xl font-bold mb-4">Nepal Blood Availability Tracker</h1>
      <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
        <Input placeholder="Search by Blood Type (e.g. O+)" onChange={(e) => setSearchType(e.target.value)} />
        <Input placeholder="Filter by City" onChange={(e) => setCityFilter(e.target.value)} />
      </div>

      <div className="grid gap-4">
        {filtered.map((row, i) => (
          <Card key={i} className="shadow-md rounded-2xl">
            <CardContent className="p-4">
              <h2 className="text-lg font-semibold">{row[0]} ({row[1]})</h2>
              <p className="text-sm text-gray-600">â˜Ž {row[2]}</p>
              <p className="mt-2">Last Updated: {row[11]} by {row[12]}</p>
              <p>Status: <span className={row[13] === "Verified" ? "text-green-600" : "text-yellow-600"}>{row[13]}</span></p>

              <div className="grid grid-cols-4 gap-2 mt-3">
                {headers.slice(3, 11).map((type, idx) => (
                  <div key={idx} className="bg-gray-100 p-2 rounded-xl text-center">
                    <p className="font-bold">{type}</p>
                    <p>{row[3 + idx]}</p>
                  </div>
                ))}
              </div>

              <Button className="mt-3" onClick={() => window.open(`tel:${row[2]}`)}>Call Hospital</Button>
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
}
